[workspace]
resolver = "2"
members = ["crates/get-size2", "crates/get-size-derive2"]

[workspace.package]
edition = "2024"
license = "MIT OR Apache-2.0"
version = "0.4.0"
authors = ["Denis Kerp", "Nicolas"]

[workspace.dependencies]
get-size-derive2 = { version = "0.4.0", path = "crates/get-size-derive2" }
syn = "2"
quote = "1"
attribute-derive = "0.10.3"

[workspace.lints.rust]
unsafe_code = "deny"
deprecated = "warn"
elided_lifetimes_in_paths = "warn"
future_incompatible = { level = "warn", priority = -1 }
nonstandard_style = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_prelude_collisions = "warn"
semicolon_in_expressions_from_macros = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"                         # `unsafe_op_in_unsafe_fn` may become the default in future Rust versions: https://github.com/rust-lang/rust/issues/71668
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
trivial_casts = "allow"
unused_qualifications = "allow"

[workspace.lints.rustdoc]
all = "warn"
missing_crate_level_docs = "warn"

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }

# deny in future
expect_used = "allow"

# allow some lints
cast_possible_truncation = "allow"
cast_sign_loss = "allow"
cast_precision_loss = "allow"
module_name_repetitions = "allow"
too_many_lines = "allow"
needless_doctest_main = "allow"
implicit_hasher = "allow"

# Additional lints from https://rust-lang.github.io/rust-clippy/master/index.html?groups=restriction
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
assertions_on_result_states = "warn"
create_dir = "warn"
clone_on_ref_ptr = "warn"
missing_assert_message = "warn"
panic_in_result_fn = "warn"
# shadow_reuse = "warn"
str_to_string = "warn"
todo = "warn"
unimplemented = "warn"
unwrap_used = "warn"
wildcard_enum_match_arm = "warn"



